{"version":3,"file":"src_scene_Manifest_ManifestPage_tsx.0050e20e5eff19e25d2f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACe;AACE;AAEzD,IAAM,YAAY,GAAa;;IACvB,SAAoB,+CAAQ,CAAC,WAAW,CAAC,EAAxC,KAAK,UAAE,QAAQ,QAAyB,CAAC;IAC1C,SAA0B,+CAAQ,CAAC,uEAAgB,EAAE,CAAC,EAArD,QAAQ,UAAE,WAAW,QAAgC,CAAC;IAE7D,IAAM,kBAAkB,GAAG,UAAC,KAA2C;QACrE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAC;IACF,IAAM,YAAY,GAAG;QACnB,qEAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YAC9B,WAAW,CAAC,OAAO,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ,CAAC;IACF,OAAO,CACL,0DAAK,SAAS,EAAC,QAAQ;QACrB,0DAAK,SAAS,EAAC,UAAU;YACvB,6DAAQ,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,kBAAkB;gBAChD,6DAAQ,KAAK,EAAC,WAAW,gBAAmB;gBAC5C,6DAAQ,KAAK,EAAC,aAAa,kBAAqB;gBAChD,6DAAQ,KAAK,EAAC,QAAQ,aAAgB,CAC/B;YACT,4DAAM;YACN,6DAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,YAAY,8GAElC;YACT,4DAAM,CACF;QACN,0DAAK,SAAS,EAAC,UAAU;YACvB;;gBAEE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,SAAG,CAC9C;YACR;;gBAEE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,EAAE,QAAQ,SAAG,CACtD;YACR;;gBAEE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,SAAG,CACrD;YACR;;gBAEE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,SAAG,CAChD;YACR;;gBAEE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,SAAG,CACjD;YACR;;gBAEE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,SAAG,CAClD;YACR;;gBAEE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,SAAG,CACvD,CACJ,CACF,CACP,CAAC;CACH,CAAC;;;GA1DI,YAAY;AA4DlB,iEAAe,YAAY,EAAC","sources":["webpack://project/./src/scene/Manifest/ManifestPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getManifest } from \"src/api/missionManifests\";\r\nimport { getEmptyManifest } from \"src/entities/Manifest\";\r\n\r\nconst ManifestPage: React.FC = () => {\r\n  const [rover, setRover] = useState(\"Curiosity\");\r\n  const [manifest, setManifest] = useState(getEmptyManifest());\r\n\r\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setRover(event.target.value);\r\n  };\r\n  const handleButton = () => {\r\n    getManifest(rover).then((apiResp) => {\r\n      setManifest(apiResp);\r\n    });\r\n  };\r\n  return (\r\n    <div className='center'>\r\n      <div className='selector'>\r\n        <select value={rover} onChange={handleSelectChange}>\r\n          <option value='Curiosity'>Curiosity</option>\r\n          <option value='Opportunity'>Opportunity</option>\r\n          <option value='Spirit'>Spirit</option>\r\n        </select>\r\n        <br />\r\n        <button type='button' onClick={handleButton}>\r\n          Случайная картинка\r\n        </button>\r\n        <br />\r\n      </div>\r\n      <div className='manifest'>\r\n        <label>\r\n          Name of the Rover:\r\n          <input type='text' value={manifest.name} disabled />\r\n        </label>\r\n        <label>\r\n          The Rover&apos;s landing date on Mars:\r\n          <input type='text' value={manifest.landing_date} disabled />\r\n        </label>\r\n        <label>\r\n          The Rover&apos;s launch date from Earth:\r\n          <input type='text' value={manifest.launch_date} disabled />\r\n        </label>\r\n        <label>\r\n          The Rover&apos;s mission status:\r\n          <input type='text' value={manifest.status} disabled />\r\n        </label>\r\n        <label>\r\n          The most recent Martian sol from which photos exist:\r\n          <input type='text' value={manifest.max_sol} disabled />\r\n        </label>\r\n        <label>\r\n          The most recent Earth date from which photos exist:\r\n          <input type='text' value={manifest.max_date} disabled />\r\n        </label>\r\n        <label>\r\n          Number of photos taken by that Rover:\r\n          <input type='text' value={manifest.photos.length} disabled />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManifestPage;\r\n"],"names":[],"sourceRoot":""}