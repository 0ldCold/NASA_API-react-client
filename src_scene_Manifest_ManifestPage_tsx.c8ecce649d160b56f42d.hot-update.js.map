{"version":3,"file":"src_scene_Manifest_ManifestPage_tsx.c8ecce649d160b56f42d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAsD;AACH;AACgB;AACA;AAEnE,IAAM,YAAY,GAAO;;IACjB,SAAoB,+CAAQ,CAAS,WAAW,CAAC,EAAhD,KAAK,UAAE,QAAQ,QAAiC,CAAC;IAClD,SAA0B,+CAAQ,CAAW,uEAAgB,EAAE,CAAC,EAA/D,QAAQ,UAAE,WAAW,QAA0C,CAAC;IACvE,IAAM,MAAM,GAAa,CAAC,WAAW,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;IAEhE,IAAM,kBAAkB,GAAG,UAAC,KAA2C;QACrE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KAErB,CAAC;IACF,gDAAS,CAAC;QACR,iEAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YAC9B,WAAW,CAAC,OAAO,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,SAAS,mBAAmB,CAAC,KAAa;QACxC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACjB;IAED,OAAO,CACL,0DAAK,SAAS,EAAC,QAAQ;QACrB,iDAAC,8EAAa,IAAC,QAAQ,EAAE,mBAAmB,EAAE,OAAO,EAAE,MAAM,GAAI;QACjE,4DAAM;QACN,0DAAK,SAAS,EAAC,UAAU;YACvB,qFAAiC;YACjC,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,SAAG;YAEpD,sGAAuD;YACvD,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,SAAG;YAE3D,oGAAqD;YACrD,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,EAAE,QAAQ,SAAG;YAE5D,8FAA+C;YAC/C,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,SAAG;YAEtD,uHAAmE;YACnE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,SAAG;YAEvD,sHAAkE;YAClE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,SAAG;YAExD,wGAAoD;YACpD,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,SAAG,CACzD,CACF,CACP,CAAC;CACH,CAAC;;;GAhDI,YAAY;AAkDlB,iEAAe,YAAY,EAAC","sources":["webpack://project/./src/scene/Manifest/ManifestPage.tsx"],"sourcesContent":["import React, { useEffect, useState,FC } from \"react\";\r\nimport { getManifest } from \"api/missionManifests\";\r\nimport { Manifest, getEmptyManifest } from \"src/entities/Manifest\";\r\nimport RoverSelector from \"components/RoverSelector/roverSelector\";\r\n\r\nconst ManifestPage: FC = () => {\r\n  const [rover, setRover] = useState<string>(\"Curiosity\");\r\n  const [manifest, setManifest] = useState<Manifest>(getEmptyManifest());\r\n  const rovers: string[] = [\"Curiosity\", \"Opportunity\", \"Spirit\"];\r\n\r\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setRover(event.target.value);\r\n    console.log(\"here\");\r\n    \r\n  };\r\n  useEffect(() => {\r\n    getManifest(rover).then((apiResp) => {\r\n      setManifest(apiResp);\r\n    });\r\n  }, [rover]);\r\n\r\n  function setRoverInComponent(param: string): void {\r\n    setRover(param);\r\n  }\r\n\r\n  return (\r\n    <div className='center'>\r\n      <RoverSelector onSelect={setRoverInComponent} options={rovers} />\r\n      <br />\r\n      <div className='manifest'>\r\n        <label>Name of the Rover:</label>\r\n        <input type='text' value={manifest.name} disabled />\r\n\r\n        <label>The Rover&apos;s launch date from Earth:</label>\r\n        <input type='text' value={manifest.launch_date} disabled />\r\n\r\n        <label>The Rover&apos;s landing date on Mars:</label>\r\n        <input type='text' value={manifest.landing_date} disabled />\r\n\r\n        <label>The Rover&apos;s mission status:</label>\r\n        <input type='text' value={manifest.status} disabled />\r\n\r\n        <label>The most recent Martian sol from which photos exist:</label>\r\n        <input type='text' value={manifest.max_sol} disabled />\r\n\r\n        <label>The most recent Earth date from which photos exist:</label>\r\n        <input type='text' value={manifest.max_date} disabled />\r\n\r\n        <label>Number of photos taken by that Rover:</label>\r\n        <input type='text' value={manifest.photos.length} disabled />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManifestPage;\r\n"],"names":[],"sourceRoot":""}