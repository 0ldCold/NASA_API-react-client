{"version":3,"file":"src_scene_Manifest_ManifestPage_tsx.c3f3d2b8166d1af5f877.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAuD;AAEjB;AACY;AAEC;AACY;AAI/D,IAAM,QAAQ,GAAG,UAAC,IAAY,EAAE,KAAa;IAC3C,OAAO,CACL;QACE,iDAAC,0DAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC;YACd,iDAAC,gEAAU,IAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,gBAAgB,EAAC,SAAS,gDAEzD,CACR;QACP,iDAAC,0DAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC;YACd,iDAAC,gEAAU,IAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,gBAAgB,EAAC,SAAS,UACnE,QAAQ,CAAC,WAAW,CACV,CACR,CACN,CACJ,CAAC;CACH,CAAC;;;AAEF,IAAM,YAAY,GAA8B,UAAC,EAAa;QAAX,SAAS;;IACpD,SAA0B,+CAAQ,CAAW,mEAAgB,EAAE,CAAC,EAA/D,QAAQ,UAAE,WAAW,QAA0C,CAAC;IAEvE,gDAAS,CAAC;QACR,iEAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YAClC,WAAW,CAAC,OAAO,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAEhB,OAAO,CACL,iDAAC,0DAAI,IAAC,SAAS,QAAC,OAAO,EAAE,CAAC;QACxB,iDAAC,0DAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC;YACd,iDAAC,gEAAU,IAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,gBAAgB,EAAC,SAAS,gDAEzD,CACR;QACP,iDAAC,0DAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC;YACd,iDAAC,gEAAU,IAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,gBAAgB,EAAC,SAAS,UACnE,QAAQ,CAAC,WAAW,CACV,CACR;QACP,iDAAC,0DAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC;YACd,iDAAC,gEAAU,IAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,gBAAgB,EAAC,SAAS,8CAEzD,CACR;QACP,iDAAC,0DAAI,IAAC,IAAI,QAAC,EAAE,EAAE,CAAC;YACd,iDAAC,gEAAU,IAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,gBAAgB,EAAC,SAAS,UACnE,QAAQ,CAAC,YAAY,CACX,CACR,CACF,CACR,CAAC;CACH,CAAC;;;GAjCI,YAAY;AAmClB,iEAAe,YAAY,EAAC","sources":["webpack://project/./src/components/custom/ManifestInfo/ManifestInfo.tsx"],"sourcesContent":["import React, { useEffect, useState, FC } from \"react\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { getManifest } from \"api/missionManifests\";\r\nimport Manifest, { getEmptyManifest } from \"entities/Manifest\";\r\nimport RoverSelector from \"components/custom/RoverSelector/roverSelector\";\r\nimport RoversName from \"src/entities/RoversName\";\r\n\r\nconst GridItem = (text: string, value: string) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={8}>\r\n        <Typography variant='h5' align='left' color='text.secondary' paragraph>\r\n          The Rover&apos;s launch date from Earth:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography variant='h5' align='left' color='text.secondary' paragraph>\r\n          {manifest.launch_date}\r\n        </Typography>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ManifestInfo: FC<{ roverName: string }> = ({ roverName }) => {\r\n  const [manifest, setManifest] = useState<Manifest>(getEmptyManifest());\r\n\r\n  useEffect(() => {\r\n    getManifest(roverName).then((apiResp) => {\r\n      setManifest(apiResp);\r\n    });\r\n  }, [roverName]);\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid item xs={8}>\r\n        <Typography variant='h5' align='left' color='text.secondary' paragraph>\r\n          The Rover&apos;s launch date from Earth:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography variant='h5' align='left' color='text.secondary' paragraph>\r\n          {manifest.launch_date}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <Typography variant='h5' align='left' color='text.secondary' paragraph>\r\n          The Rover&apos;s landing date on Mars:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography variant='h5' align='left' color='text.secondary' paragraph>\r\n          {manifest.landing_date}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ManifestInfo;\r\n\r\n// <div className='center'>\r\n//   <RoverSelector onSelect={setRoverInComponent} options={RoversName} />\r\n//   <div className='manifest'>\r\n//     <label>Name of the Rover:</label>\r\n//     <input type='text' value={manifest.name} disabled />\r\n\r\n//     <label>The Rover&apos;s launch date from Earth:</label>\r\n//     <input type='text' value={manifest.launch_date} disabled />\r\n\r\n//     <label>The Rover&apos;s landing date on Mars:</label>\r\n//     <input type='text' value={manifest.landing_date} disabled />\r\n\r\n//     <label>The Rover&apos;s mission status:</label>\r\n//     <input type='text' value={manifest.status} disabled />\r\n\r\n//     <label>The most recent Martian sol from which photos exist:</label>\r\n//     <input type='text' value={manifest.max_sol} disabled />\r\n\r\n//     <label>The most recent Earth date from which photos exist:</label>\r\n//     <input type='text' value={manifest.max_date} disabled />\r\n\r\n//     <label>Number of photos taken by that Rover:</label>\r\n//     <input type='text' value={manifest.photos.length} disabled />\r\n//   </div>\r\n// </div>\r\n"],"names":[],"sourceRoot":""}