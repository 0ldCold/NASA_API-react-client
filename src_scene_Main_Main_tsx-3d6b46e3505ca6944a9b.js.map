{"version":3,"file":"src_scene_Main_Main_tsx-3d6b46e3505ca6944a9b.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+C;AAExC,IAAM,iBAAiB,GAAG,UAC/B,SAAiB,EACjB,GAAY,EACZ,UAAmB,EACnB,MAAe,EACf,IAAa,qCACZ,OAAO;;;;oBACQ,WAAM,mDAAY,CAAmB,8CAAO,gBAAW,SAAS,YAAS,EAAE;oBACzF,MAAM,EAAE;wBACN,UAAU;wBACV,GAAG;wBACH,MAAM;wBACN,IAAI;qBACL;iBACF,CAAC;;gBAPI,OAAO,GAAG,SAOd;gBACF,WAAO,OAAO,CAAC,IAAI,CAAC,MAAM,EAAC;;;KAC5B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBiE;AAChB;AAEnD,IAAM,IAAI,GAAa;;IACf,SAAoB,+CAAQ,CAAC,WAAW,CAAC,EAAxC,KAAK,UAAE,QAAQ,QAAyB,CAAC;IAC1C,SAAgB,+CAAQ,CAAC,EAAE,CAAC,EAA3B,GAAG,UAAE,MAAM,QAAgB,CAAC;IAEnC,IAAM,WAAW,GAAG,UAAC,MAAc;QACjC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;KAC1D,CAAC;IAEF,IAAM,cAAc,GAAG;;;;wBACL,WAAM,yEAAiB,CAAC,KAAK,EAAE,IAAI,CAAC;;oBAA9C,OAAO,GAAG,SAAoC;oBACpD,WAAO,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,EAAC;;;SACrC,CAAC;IACF,IAAM,YAAY,GAAG;QACnB,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,SAAS,IAAK,aAAM,CAAC,SAAS,CAAC,EAAjB,CAAiB,CAAC,CAAC;KACzD,CAAC;IAMF,OAAO,CACL,0DAAK,SAAS,EAAC,QAAQ;QACrB,6DAAQ,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAC,KAAK,IAAK,eAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAA5B,CAA4B;YACrE,6DAAQ,KAAK,EAAC,WAAW,gBAAmB;YAC5C,6DAAQ,KAAK,EAAC,aAAa,kBAAqB;YAChD,6DAAQ,KAAK,EAAC,QAAQ,aAAgB,CAC/B;QACT,4DAAM;QACN,6DAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,YAAY,sFAElC;QACT,4DAAM;QACN,0DAAK,GAAG,EAAC,kBAAkB,EAAC,GAAG,EAAE,GAAG,GAAI,CACpC,CACP,CAAC;CACH,CAAC;;;GAnCI,IAAI;AAqCV,iEAAe,IAAI,EAAC","sources":["webpack://project/./src/api/photosEndPoint.ts","webpack://project/./src/scene/Main/Main.tsx"],"sourcesContent":["import { instance, API_URL } from \"./instance\";\r\n\r\nexport const getPhotosEndPoint = async (\r\n  roverName: string,\r\n  sol?: number,\r\n  earth_date?: string,\r\n  camera?: string,\r\n  page?: number\r\n): Promise<Photos> => {\r\n  const ApiResp = await instance.get<PhotosApiData>(`${API_URL}/rovers/${roverName}/photos`, {\r\n    params: {\r\n      earth_date,\r\n      sol,\r\n      camera,\r\n      page\r\n    }\r\n  });\r\n  return ApiResp.data.photos;\r\n};\r\n\r\nexport interface PhotosApiData {\r\n  photos: Photos;\r\n}\r\n\r\nexport interface Photos {\r\n  [index: number]: {\r\n    id: number;\r\n    sol: number;\r\n    camera: {\r\n      id: number;\r\n      name: string;\r\n      rover_id: number;\r\n      full_name: string;\r\n    };\r\n    img_src: string;\r\n    earth_date: string;\r\n    rover: {\r\n      id: number;\r\n      name: string;\r\n      landing_date: string;\r\n      launch_date: string;\r\n      status: string;\r\n    };\r\n  };\r\n  length: number;\r\n}\r\n","import { getPhotosEndPoint, Photos } from \"src/api/photosEndPoint\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Main: React.FC = () => {\r\n  const [rover, setRover] = useState(\"Curiosity\");\r\n  const [img, setImg] = useState(\"\");\r\n\r\n  const randomPhoto = (photos: Photos) => {\r\n    return photos[Math.floor(Math.random() * photos.length)];\r\n  };\r\n\r\n  const getRandomPhoto = async () => {\r\n    const apiResp = await getPhotosEndPoint(rover, 1000);\r\n    return randomPhoto(apiResp).img_src;\r\n  };\r\n  const handleButton = () => {\r\n    getRandomPhoto().then((randomImg) => setImg(randomImg));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   handleButton();\r\n  // });\r\n\r\n  return (\r\n    <div className='center'>\r\n      <select value={rover} onChange={(event) => setRover(event.target.value)}>\r\n        <option value='Curiosity'>Curiosity</option>\r\n        <option value='Opportunity'>Opportunity</option>\r\n        <option value='Spirit'>Spirit</option>\r\n      </select>\r\n      <br />\r\n      <button type='button' onClick={handleButton}>\r\n        Случайное фото\r\n      </button>\r\n      <br />\r\n      <img alt='RandomRoverPhoto' src={img} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"names":[],"sourceRoot":""}