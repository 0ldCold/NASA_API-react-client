{"version":3,"file":"src_scene_Manifest_ManifestPage_tsx-8591d62caf913abb34ce.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAuD;AAEJ;AACY;AACW;AACzB;AAEjD,IAAM,YAAY,GAAO;;IACjB,SAAoB,+CAAQ,CAAS,WAAW,CAAC,EAAhD,KAAK,UAAE,QAAQ,QAAiC,CAAC;IAClD,SAA0B,+CAAQ,CAAW,mEAAgB,EAAE,CAAC,EAA/D,QAAQ,UAAE,WAAW,QAA0C,CAAC;IAEvE,gDAAS,CAAC;QACR,iEAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YAC9B,WAAW,CAAC,OAAO,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,SAAS,mBAAmB,CAAC,KAAa;QACxC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACjB;IAED,OAAO,CACL,0DAAK,SAAS,EAAC,QAAQ;QACrB,iDAAC,qFAAa,IAAC,QAAQ,EAAE,mBAAmB,EAAE,OAAO,EAAE,+DAAU,GAAI;QACrE,0DAAK,SAAS,EAAC,UAAU;YACvB,qFAAiC;YACjC,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,SAAG;YAEpD,sGAAuD;YACvD,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,SAAG;YAE3D,oGAAqD;YACrD,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,EAAE,QAAQ,SAAG;YAE5D,8FAA+C;YAC/C,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,SAAG;YAEtD,uHAAmE;YACnE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,SAAG;YAEvD,sHAAkE;YAClE,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,SAAG;YAExD,wGAAoD;YACpD,4DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,SAAG,CACzD,CACF,CACP,CAAC;CACH,CAAC;;;GAzCI,YAAY;AA2ClB,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDM;AACoB;AACU;AAEhE,IAAM,aAAa,GAId,UAAC,EAA4B;QAA1B,QAAQ,gBAAE,KAAK,aAAE,OAAO;IAC9B,OAAO,CACL,iDAAC,uEAAiB,IAAC,KAAK,EAAE,KAAK,EAAE,SAAS,QAAC,QAAQ,EAAE,UAAC,CAAC,EAAE,QAAQ,IAAK,eAAQ,CAAC,QAAQ,CAAC,EAAlB,CAAkB,IACrF,OAAO,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,QACrB,iDAAC,kEAAY,IAAC,KAAK,EAAE,IAAI,IAAG,IAAI,CAAgB,CACjD,EAFsB,CAEtB,CAAC,CACgB,CACrB,CAAC;CACH,CAAC;;;AAEF,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGtB,IAAM,gBAAgB,GAAG;IAC9B,IAAM,QAAQ,GAAa;QACzB,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,EAAE;QAChB,WAAW,EAAE,EAAE;QACf,MAAM,EAAE,EAAE;QACV,OAAO,EAAE,CAAC;QACV,QAAQ,EAAE,EAAE;QACZ,YAAY,EAAE,CAAC;QACf,MAAM,EAAE,EAAE;KACX,CAAC;IACF,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCF,IAAM,UAAU,GAAa,CAAC,WAAW,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;AAEpE,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFQ;AACqC;AAEvE,IAAM,YAAY,GAAO;IACvB,OAAO,iDAAC,mFAAY,OAAG,CAAC;CACzB,CAAC;;;AAEF,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNmB;AAExC,IAAM,WAAW,GAAG,UAAO,SAAiB,qCAAG,OAAO;;;;oBAC3C,WAAM,mDAAY,CAAoB,8CAAO,mBAAc,SAAW,CAAC;;gBAAjF,OAAO,GAAG,SAAuE;gBACvF,WAAO,OAAO,CAAC,IAAI,CAAC,cAAc,EAAC;;;KACpC,CAAC","sources":["webpack://project/./src/components/custom/ManifestInfo/ManifestInfo.tsx","webpack://project/./src/components/custom/RoverSelector/roverSelector.tsx","webpack://project/./src/entities/Manifest.ts","webpack://project/./src/entities/RoversName.ts","webpack://project/./src/scene/Manifest/ManifestPage.tsx","webpack://project/./src/utils/api/missionManifests.ts"],"sourcesContent":["import React, { useEffect, useState, FC } from \"react\";\r\n\r\nimport { getManifest } from \"api/missionManifests\";\r\nimport Manifest, { getEmptyManifest } from \"entities/Manifest\";\r\nimport RoverSelector from \"components/custom/RoverSelector/roverSelector\";\r\nimport RoversName from \"src/entities/RoversName\";\r\n\r\nconst ManifestInfo: FC = () => {\r\n  const [rover, setRover] = useState<string>(\"Curiosity\");\r\n  const [manifest, setManifest] = useState<Manifest>(getEmptyManifest());\r\n\r\n  useEffect(() => {\r\n    getManifest(rover).then((apiResp) => {\r\n      setManifest(apiResp);\r\n    });\r\n  }, [rover]);\r\n\r\n  function setRoverInComponent(param: string): void {\r\n    setRover(param);\r\n  }\r\n\r\n  return (\r\n    <div className='center'>\r\n      <RoverSelector onSelect={setRoverInComponent} options={RoversName} />\r\n      <div className='manifest'>\r\n        <label>Name of the Rover:</label>\r\n        <input type='text' value={manifest.name} disabled />\r\n\r\n        <label>The Rover&apos;s launch date from Earth:</label>\r\n        <input type='text' value={manifest.launch_date} disabled />\r\n\r\n        <label>The Rover&apos;s landing date on Mars:</label>\r\n        <input type='text' value={manifest.landing_date} disabled />\r\n\r\n        <label>The Rover&apos;s mission status:</label>\r\n        <input type='text' value={manifest.status} disabled />\r\n\r\n        <label>The most recent Martian sol from which photos exist:</label>\r\n        <input type='text' value={manifest.max_sol} disabled />\r\n\r\n        <label>The most recent Earth date from which photos exist:</label>\r\n        <input type='text' value={manifest.max_date} disabled />\r\n\r\n        <label>Number of photos taken by that Rover:</label>\r\n        <input type='text' value={manifest.photos.length} disabled />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManifestInfo;\r\n","import React, { FC } from \"react\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\n\r\nconst RoverSelector: FC<{\r\n  options: string[];\r\n  value: string;\r\n  onSelect: (value: string) => void;\r\n}> = ({ onSelect, value, options }) => {\r\n  return (\r\n    <ToggleButtonGroup value={value} exclusive onChange={(e, newValue) => onSelect(newValue)}>\r\n      {options.map((name) => (\r\n        <ToggleButton value={name}>{name}</ToggleButton>\r\n      ))}\r\n    </ToggleButtonGroup>\r\n  );\r\n};\r\n\r\nexport default RoverSelector;\r\n","interface Manifest {\r\n  name: string;\r\n  landing_date: string;\r\n  launch_date: string;\r\n  status: string;\r\n  max_sol: number;\r\n  max_date: string;\r\n  total_photos: number;\r\n  photos: {\r\n    [index: number]: {\r\n      sol: number;\r\n      earth_date: string;\r\n      total_photos: number;\r\n      cameras: {\r\n        [index: number]: string;\r\n      };\r\n    };\r\n    length: number;\r\n  };\r\n}\r\n\r\nexport const getEmptyManifest = (): Manifest => {\r\n  const manifest: Manifest = {\r\n    name: \"\",\r\n    landing_date: \"\",\r\n    launch_date: \"\",\r\n    status: \"\",\r\n    max_sol: 0,\r\n    max_date: \"\",\r\n    total_photos: 0,\r\n    photos: []\r\n  };\r\n  return manifest;\r\n};\r\n\r\nexport default Manifest;\r\n","const RoversName: string[] = [\"Curiosity\", \"Opportunity\", \"Spirit\"];\r\n\r\nexport default RoversName;\r\n","import React, { FC } from \"react\";\r\nimport ManifestInfo from \"components/custom/ManifestInfo/ManifestInfo\";\r\n\r\nconst ManifestPage: FC = () => {\r\n  return <ManifestInfo />;\r\n};\r\n\r\nexport default ManifestPage;\r\n","import Manifest from \"entities/Manifest\";\r\nimport { instance, API_URL } from \"./instance\";\r\n\r\nexport const getManifest = async (roverName: string): Promise<Manifest> => {\r\n  const ApiResp = await instance.get<MissionApiData>(`${API_URL}/manifests/${roverName}`);\r\n  return ApiResp.data.photo_manifest;\r\n};\r\n\r\nexport interface MissionApiData {\r\n  photo_manifest: Manifest;\r\n}\r\n"],"names":[],"sourceRoot":""}