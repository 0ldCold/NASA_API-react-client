{"version":3,"file":"src_scene_Main_Main_tsx.1a730d1249d8eebcef33.hot-update.js","mappings":"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","sources":["webpack://project/./src/components/custom/RoverSelector/roverSelector.tsx","webpack://project/./src/scene/Main/Main.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\n\r\nconst RoverSelector: FC<{\r\n  options: string[];\r\n  value: string;\r\n  onSelect: (value: string) => void;\r\n}> = ({ onSelect, value, options }) => {\r\n  return (\r\n    <ToggleButtonGroup\r\n      color='primary'\r\n      value={value}\r\n      exclusive\r\n      onChange={(e, newValue) => onSelect(newValue)}\r\n    >\r\n      {options.map((name) => (\r\n        <ToggleButton value={name}>{name}</ToggleButton>\r\n      ))}\r\n    </ToggleButtonGroup>\r\n  );\r\n};\r\n\r\nexport default RoverSelector;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Photo from \"entities/Photo\";\nimport Manifest, { getEmptyManifest } from \"entities/Manifest\";\nimport RoverSelector from \"components/custom/RoverSelector/roverSelector\";\nimport RoversName from \"entities/RoversName\";\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='text.secondary' align='center'>\n      {\"Copyright © \"}\n      <Link color='inherit' href='https://mui.com/'>\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#aa593e\"\n    },\n    secondary: {\n      main: \"#693118\"\n    },\n    background: {\n      paper: \"#fba87e\",\n      default: \"#fedbca\"\n    }\n  }\n});\n\nconst Main: React.FC = () => {\n  const [roverName, setRoverName] = useState<string>(RoversName[0]);\n  const [manifest, setManifest] = useState<Manifest>(getEmptyManifest());\n\n  const photos: Photo[] = [\n    {\n      key: \"1\",\n      imgSrc: \"\"\n    }\n  ];\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position='relative'>\n        <Toolbar>\n          <Typography variant='h6' color='inherit' noWrap>\n            Mars rovers\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <Box\n          sx={{\n            bgcolor: \"background.paper\",\n            pt: 8,\n            pb: 6\n          }}\n        >\n          <Container maxWidth='sm'>\n            <Typography\n              component='h1'\n              variant='h2'\n              align='center'\n              color='text.primary'\n              gutterBottom\n            >\n              {manifest.name}\n            </Typography>\n            <Typography variant='h5' align='center' color='text.secondary' paragraph>\n              Something short and leading about the collection below—its contents, the creator, etc.\n              Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n              entirely.\n            </Typography>\n            <Stack sx={{ pt: 4 }} direction='row' spacing={2} justifyContent='center'>\n              <RoverSelector options={RoversName} value={roverName} onSelect={setRoverName}\n            </Stack>\n          </Container>\n        </Box>\n        <Box>\n          <Container\n            sx={{\n              py: 8\n            }}\n            maxWidth='md'\n          >\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n              {photos.map((photo) => (\n                <Grid item key={photo.key} xs={12} sm={6} md={4}>\n                  <Card\n                    sx={{\n                      height: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\"\n                    }}\n                  >\n                    <CardMedia component='img' sx={{}} image={photo.imgSrc} alt={photo.key} />\n                    <CardContent sx={{ flexGrow: 1 }}>\n                      {photo.heading != null && (\n                        <Typography gutterBottom variant='h5' component='h2'>\n                          Heading\n                        </Typography>\n                      )}\n                      {photo.description != null && (\n                        <Typography>\n                          This is a media card. You can use this section to describe the content.\n                        </Typography>\n                      )}\n                    </CardContent>\n                    <CardActions>\n                      <Button size='small'>View</Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </Box>\n      </main>\n      {/* Footer */}\n      <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component='footer'>\n        <Typography variant='h6' align='center' gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant='subtitle1' align='center' color='text.secondary' component='p'>\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </Box>\n      {/* End footer */}\n    </ThemeProvider>\n  );\n};\n\nexport default Main;\n"],"names":[],"sourceRoot":""}