{"version":3,"file":"node_modules_mui_system_esm_colorManipulator_js-node_modules_mui_system_esm_createBox_js-node-c6043e.95d4a7702ebb292455c9.hot-update.js","mappings":"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","sources":["webpack://project/./node_modules/react-lazy-load-image-component/src/effects/blur.css","webpack://project/./src/components/custom/NiceLoadingImage.tsx","webpack://project/./src/components/custom/RandomPhoto.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1641657873288\n      var cssReload = require(\"D:/projects/NASA_API-react-client/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport Photo from \"entities/Photo\";\r\n\r\nconst NiceLoadingImage: React.FC<{ image: Photo; width: number }> = ({ image, width }) => (\r\n  <LazyLoadImage alt={image.key} effect='blur' src={image.imgSrc} width={width} />\r\n);\r\n\r\nexport default NiceLoadingImage;\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\r\n\r\nimport { getPhotosEndPoint } from \"api/photosEndPoint\";\r\nimport Manifest from \"entities/Manifest\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { getRandomInt, getArrayOfRandomUniqueInt } from \"utils/utils\";\r\nimport Photo from \"entities/Photo\";\r\nimport RoverPhotos from \"entities/RoverPhotos\";\r\nimport NiceLoadingImage from \"./NiceLoadingImage\";\r\n\r\nconst RandomPhoto: React.FC<{ roverManifest: Manifest }> = ({ roverManifest }) => {\r\n  const photosQuantity = 9;\r\n  const [photos, setPhotos] = useState<Photo[]>([]);\r\n\r\n  const getRandomPhoto = async (manifest: Manifest): Promise<Photo[]> => {\r\n    // Если фотографий в указанный марсианский день (Sol) меньше 9, то ищем по другому марсианскому дню\r\n    // Повторяется пока не найдет нужный Sol\r\n    // Но такое случается редко и зачастую данный цикл проходит только 1 раз\r\n    let apiResp: RoverPhotos;\r\n    do {\r\n      const randomSol = getRandomInt(1, manifest.max_sol);\r\n      // eslint-disable-next-line no-await-in-loop\r\n      apiResp = await getPhotosEndPoint(manifest.name, randomSol);\r\n    } while (apiResp.length < 9);\r\n    const randUniqInts = getArrayOfRandomUniqueInt(0, apiResp.length - 1, photosQuantity);\r\n    const photosSrc: Photo[] = [];\r\n    randUniqInts.forEach((randomInt: number, index: number) => {\r\n      photosSrc.push({\r\n        key: index.toString(),\r\n        imgSrc: apiResp[randomInt].img_src\r\n      });\r\n    });\r\n    return photosSrc;\r\n  };\r\n  const memoGetRandomPhoto = useCallback(getRandomPhoto, [roverManifest]);\r\n\r\n  useEffect(() => {\r\n    if (roverManifest.name !== \"\") {\r\n      memoGetRandomPhoto(roverManifest).then((result) => {\r\n        setPhotos(result);\r\n      });\r\n    }\r\n  }, [memoGetRandomPhoto, roverManifest]);\r\n\r\n  const handleButtonView = (imgSrc: string) => {\r\n    window.open(imgSrc);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {photos.map((photo) => (\r\n        <Grid item key={photo.key} xs={12} sm={6} md={4}>\r\n          <Card\r\n            sx={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            <NiceLoadingImage image={photo} />\r\n            {/* <CardMedia component='img' sx={{}} image={photo.imgSrc} alt={photo.key} /> */}\r\n            <CardContent sx={{ flexGrow: 1 }}>\r\n              {photo.heading != null && (\r\n                <Typography gutterBottom variant='h5' component='h2'>\r\n                  Heading\r\n                </Typography>\r\n              )}\r\n              {photo.description != null && (\r\n                <Typography>\r\n                  This is a media card. You can use this section to describe the content.\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size='small' onClick={() => handleButtonView(photo.imgSrc)}>\r\n                View\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RandomPhoto;\r\n"],"names":[],"sourceRoot":""}