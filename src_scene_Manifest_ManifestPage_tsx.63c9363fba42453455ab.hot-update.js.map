{"version":3,"file":"src_scene_Manifest_ManifestPage_tsx.63c9363fba42453455ab.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAkC;AACgB;AAElD,IAAM,aAAa,GAAiE,UAAC,EAGpF;QAFC,QAAQ,gBACR,OAAO;IAMP,IAAM,aAAa,GAAa,OAAO,CAAC,GAAG,CAAC,UAAC,IAAI;QAC/C,OAAO;YACL,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;SACZ,CAAC;KACH,CAAC,CAAC;IACH,IAAM,kBAAkB,GAAG,UAAC,MAAqB;QAC/C,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACxB;KACF,CAAC;IAEF,OAAO,CACL,0DAAK,SAAS,EAAC,UAAU;QACvB,iDAAC,oDAAM,IAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,kBAAkB,GAAI,CAQ5D,CACP,CAAC;CACH,CAAC;;;AAEF,iEAAe,aAAa,EAAC","sources":["webpack://project/./src/components/RoverSelector/roverSelector.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport Select, { ActionMeta } from \"react-select\";\r\n\r\nconst RoverSelector: FC<{ options: string[]; onSelect: (value: string) => void }> = ({\r\n  onSelect,\r\n  options\r\n}) => {\r\n  interface Option {\r\n    label: string;\r\n    value: string;\r\n  }\r\n  const selectOptions: Option[] = options.map((item) => {\r\n    return {\r\n      value: item,\r\n      label: item\r\n    };\r\n  });\r\n  const handleSelectChange = (option: Option | null) => {\r\n    if (option != null) {\r\n      onSelect(option.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='selector'>\r\n      <Select options={selectOptions} onChange={handleSelectChange} />\r\n      {/* <select onChange={(e) => handleSelectChange(e.currentTarget.value)}>\r\n        {options.map((item) => (\r\n          <option value={item} key={item}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </select> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoverSelector;\r\n"],"names":[],"sourceRoot":""}