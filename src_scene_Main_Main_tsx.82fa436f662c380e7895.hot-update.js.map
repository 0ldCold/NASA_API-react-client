{"version":3,"file":"src_scene_Main_Main_tsx.82fa436f662c380e7895.hot-update.js","mappings":"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","sources":["webpack://project/./src/components/custom/ManifestInfo/ManifestInfo.tsx","webpack://project/./src/entities/Manifest.ts","webpack://project/./src/scene/Main/Main.tsx","webpack://project/./src/utils/api/missionManifests.ts"],"sourcesContent":["import React, { useEffect, useState, FC } from \"react\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { getManifest } from \"api/missionManifests\";\r\nimport Manifest, { getEmptyManifest } from \"entities/Manifest\";\r\nimport RoverSelector from \"components/custom/RoverSelector/roverSelector\";\r\nimport RoversName from \"src/entities/RoversName\";\r\n\r\nconst ManifestInfo: FC<{ roverName: string }> = ({ roverName }) => {\r\n  const [manifest, setManifest] = useState<Manifest>(getEmptyManifest());\r\n\r\n  useEffect(() => {\r\n    getManifest(roverName).then((apiResp) => {\r\n      setManifest(apiResp);\r\n    });\r\n  }, [roverName]);\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid item>\r\n        <Typography variant='h5' align='center' color='text.secondary' paragraph>\r\n          Name of the Rover:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant='h5' align='center' color='text.secondary' paragraph>\r\n          {manifest.name}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ManifestInfo;\r\n\r\n// <div className='center'>\r\n//   <RoverSelector onSelect={setRoverInComponent} options={RoversName} />\r\n//   <div className='manifest'>\r\n//     <label>Name of the Rover:</label>\r\n//     <input type='text' value={manifest.name} disabled />\r\n\r\n//     <label>The Rover&apos;s launch date from Earth:</label>\r\n//     <input type='text' value={manifest.launch_date} disabled />\r\n\r\n//     <label>The Rover&apos;s landing date on Mars:</label>\r\n//     <input type='text' value={manifest.landing_date} disabled />\r\n\r\n//     <label>The Rover&apos;s mission status:</label>\r\n//     <input type='text' value={manifest.status} disabled />\r\n\r\n//     <label>The most recent Martian sol from which photos exist:</label>\r\n//     <input type='text' value={manifest.max_sol} disabled />\r\n\r\n//     <label>The most recent Earth date from which photos exist:</label>\r\n//     <input type='text' value={manifest.max_date} disabled />\r\n\r\n//     <label>Number of photos taken by that Rover:</label>\r\n//     <input type='text' value={manifest.photos.length} disabled />\r\n//   </div>\r\n// </div>\r\n","interface Manifest {\r\n  name: string;\r\n  landing_date: string;\r\n  launch_date: string;\r\n  status: string;\r\n  max_sol: number;\r\n  max_date: string;\r\n  total_photos: number;\r\n  photos: {\r\n    [index: number]: {\r\n      sol: number;\r\n      earth_date: string;\r\n      total_photos: number;\r\n      cameras: {\r\n        [index: number]: string;\r\n      };\r\n    };\r\n    length: number;\r\n  };\r\n}\r\n\r\nexport const getEmptyManifest = (): Manifest => {\r\n  const manifest: Manifest = {\r\n    name: \"\",\r\n    landing_date: \"\",\r\n    launch_date: \"\",\r\n    status: \"\",\r\n    max_sol: 0,\r\n    max_date: \"\",\r\n    total_photos: 0,\r\n    photos: []\r\n  };\r\n  return manifest;\r\n};\r\n\r\nexport default Manifest;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Photo from \"entities/Photo\";\nimport Manifest, { getEmptyManifest } from \"entities/Manifest\";\nimport RoverSelector from \"components/custom/RoverSelector/roverSelector\";\nimport RoversName from \"entities/RoversName\";\nimport { getManifest } from \"api/missionManifests\";\nimport ManifestInfo from \"components/custom/ManifestInfo/ManifestInfo\";\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='text.secondary' align='center'>\n      {\"Copyright Â© \"}\n      <Link color='inherit' href='https://mui.com/'>\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#aa593e\"\n    },\n    secondary: {\n      main: \"#693118\"\n    },\n    background: {\n      paper: \"#fba87e\",\n      default: \"#fedbca\"\n    },\n    action: {\n      selectedOpacity: 0.2\n    }\n  }\n});\n\nconst Main: React.FC = () => {\n  const [roverName, setRoverName] = useState<string>(RoversName[0]);\n\n  const photos: Photo[] = [\n    {\n      key: \"1\",\n      imgSrc: \"\"\n    },\n    {\n      key: \"2\",\n      imgSrc: \"\"\n    }\n  ];\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position='relative'>\n        <Toolbar>\n          <Typography variant='h6' color='inherit' noWrap>\n            Mars rovers\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <Box\n          sx={{\n            bgcolor: \"background.paper\",\n            pt: 8,\n            pb: 6\n          }}\n        >\n          <Container maxWidth='sm'>\n            <Typography\n              component='h1'\n              variant='h2'\n              align='center'\n              color='text.primary'\n              gutterBottom\n            >\n              {roverName}\n            </Typography>\n            <ManifestInfo roverName={roverName} />\n            <Stack sx={{ pt: 4 }} direction='row' spacing={2} justifyContent='center'>\n              <RoverSelector options={RoversName} onSelect={setRoverName} />\n            </Stack>\n          </Container>\n        </Box>\n        <Box>\n          <Container\n            sx={{\n              py: 8\n            }}\n            maxWidth='md'\n          >\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n              {photos.map((photo) => (\n                <Grid item key={photo.key} xs={12} sm={6} md={4}>\n                  <Card\n                    sx={{\n                      height: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\"\n                    }}\n                  >\n                    <CardMedia component='img' sx={{}} image={photo.imgSrc} alt={photo.key} />\n                    <CardContent sx={{ flexGrow: 1 }}>\n                      {photo.heading != null && (\n                        <Typography gutterBottom variant='h5' component='h2'>\n                          Heading\n                        </Typography>\n                      )}\n                      {photo.description != null && (\n                        <Typography>\n                          This is a media card. You can use this section to describe the content.\n                        </Typography>\n                      )}\n                    </CardContent>\n                    <CardActions>\n                      <Button size='small'>View</Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </Box>\n      </main>\n      {/* Footer */}\n      <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component='footer'>\n        <Typography variant='h6' align='center' gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant='subtitle1' align='center' color='text.secondary' component='p'>\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </Box>\n      {/* End footer */}\n    </ThemeProvider>\n  );\n};\n\nexport default Main;\n","import Manifest from \"entities/Manifest\";\r\nimport { instance, API_URL } from \"./instance\";\r\n\r\nexport const getManifest = async (roverName: string): Promise<Manifest> => {\r\n  const ApiResp = await instance.get<MissionApiData>(`${API_URL}/manifests/${roverName}`);\r\n  return ApiResp.data.photo_manifest;\r\n};\r\n\r\nexport interface MissionApiData {\r\n  photo_manifest: Manifest;\r\n}\r\n"],"names":[],"sourceRoot":""}