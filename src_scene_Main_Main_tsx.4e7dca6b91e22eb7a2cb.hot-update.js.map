{"version":3,"file":"src_scene_Main_Main_tsx.4e7dca6b91e22eb7a2cb.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAuD;AACY;AAC3B;AACS;AACF;AAE/C,IAAM,WAAW,GAAa;;IACtB,SAAoB,+CAAQ,CAAC,WAAW,CAAC,EAAxC,KAAK,UAAE,QAAQ,QAAyB,CAAC;IAC1C,SAAgB,+CAAQ,CAAC,EAAE,CAAC,EAA3B,GAAG,UAAE,MAAM,QAAgB,CAAC;IAEnC,IAAM,cAAc,GAAG,UAAO,SAAiB,qCAAG,OAAO;;;;;wBACvC,WAAM,qEAAiB,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC;;oBAArE,OAAO,GAAG,SAA2D;oBAC3E,iBAAO,OAAO,CAAC,6DAAY,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,0CAAE,OAAO,EAAC;;;SAC1D,CAAC;IACF,IAAM,YAAY,GAAG;QACnB,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YAChC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChB,CAAC,CAAC;KACJ,CAAC;IAEF,SAAS,mBAAmB,CAAC,KAAa;QACxC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACjB;IAED,OAAO,CACL,0DAAK,SAAS,EAAC,QAAQ;QACrB,iDAAC,8EAAa,IAAC,QAAQ,EAAE,mBAAmB,EAAE,OAAO,EAAE,+DAAU,GAAI;QACrE,4DAAM;QACN,6DAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,YAAY,mBAElC;QACT,4DAAM;QACN,0DAAK,SAAS,EAAC,YAAY,EAAC,GAAG,EAAC,mBAAmB,EAAC,GAAG,EAAE,GAAG,GAAI,CAC5D,CACP,CAAC;CACH,CAAC;;;GA7BI,WAAW;AA+BjB,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCpB,SAAS,YAAY,CAAC,GAAW,EAAE,GAAW;IACnD,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC;AAC5E,CAAC","sources":["webpack://project/./src/components/RandomPhoto/randomPhoto.tsx","webpack://project/./src/utils/utils.ts"],"sourcesContent":["import { getPhotosEndPoint } from \"api/photosEndPoint\";\r\nimport RoverSelector from \"components/RoverSelector/roverSelector\";\r\nimport React, { useState } from \"react\";\r\nimport RoversName from \"src/entities/RoversName\";\r\nimport { getRandomInt } from \"src/utils/utils\";\r\n\r\nconst RandomPhoto: React.FC = () => {\r\n  const [rover, setRover] = useState(\"Curiosity\");\r\n  const [img, setImg] = useState(\"\");\r\n\r\n  const getRandomPhoto = async (roverName: string): Promise<string> => {\r\n    const apiResp = await getPhotosEndPoint(roverName, undefined, \"2015-06-03\");\r\n    return apiResp[getRandomInt(0, apiResp.length)]?.img_src;\r\n  };\r\n  const handleButton = () => {\r\n    getRandomPhoto(rover).then((imgSrc) => {\r\n      setImg(imgSrc);\r\n    });\r\n  };\r\n\r\n  function setRoverInComponent(param: string): void {\r\n    setRover(param);\r\n  }\r\n\r\n  return (\r\n    <div className='center'>\r\n      <RoverSelector onSelect={setRoverInComponent} options={RoversName} />\r\n      <br />\r\n      <button type='button' onClick={handleButton}>\r\n        Random image\r\n      </button>\r\n      <br />\r\n      <img className='roverPhoto' alt='RandomRoversPhoto' src={img} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomPhoto;\r\n","/* eslint-disable import/prefer-default-export */\r\nexport function getRandomInt(min: number, max: number): number {\r\n  const RoundedMin = Math.ceil(min);\r\n  const RoundedMax = Math.floor(max);\r\n  return Math.floor(Math.random() * (RoundedMax - RoundedMin)) + RoundedMin; // Максимум не включается, минимум включается\r\n}\r\n"],"names":[],"sourceRoot":""}