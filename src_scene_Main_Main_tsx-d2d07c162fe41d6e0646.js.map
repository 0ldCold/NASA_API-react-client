{"version":3,"file":"src_scene_Main_Main_tsx-d2d07c162fe41d6e0646.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACsC;AAE/B,IAAM,WAAW,GAAG,UAAO,SAAiB;;;;;gBAC3C,MAAM,GAAG,mDAAY,CACzB,wDAAsD,SAAW,CAClE,CAAC;gBACM,WAAM,MAAM;oBAApB,WAAO,CAAC,SAAY,CAAC,CAAC,IAAI,EAAC;;;KAO5B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdqD;AAC7B;AAE1B,IAAM,IAAI,GAAa;IACrB,OAAO,oGAAG,qEAAW,CAAC,WAAW,CAAC,CAAI,CAAC;CACxC,CAAC;;;AAEF,iEAAe,IAAI,EAAC","sources":["webpack://project/./src/api/missionManifests.ts","webpack://project/./src/scene/Main/Main.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { instance } from \"./instance\";\r\n\r\nexport const getManifest = async (roverName: string) => {\r\n  const result = instance.get<Manifest>(\r\n    `https://mars-photos.herokuapp.com/api/v1/manifests/${roverName}`\r\n  );\r\n  return (await result).data;\r\n  // let apiData = await instance.get(\r\n  //   `https://mars-photos.herokuapp.com/api/v1/manifests/${roverName}`\r\n  // );\r\n  // apiData = apiData.data.photo_manifest;\r\n  // if (!apiData) throw new Error(\"Данных нет\");\r\n  // return apiData;\r\n};\r\n\r\nexport interface Manifest {\r\n  name: string;\r\n  landing_date: Date | undefined;\r\n  launch_date: Date | undefined;\r\n  status: string;\r\n  max_sol: number;\r\n  max_date: Date | undefined;\r\n  total_photos: number;\r\n  photos: Array<ManifestPhoto>;\r\n}\r\n\r\nexport interface ManifestPhoto {\r\n  sol: number;\r\n  earth_date: Date | undefined;\r\n  total_photos: number;\r\n  cameras: Array<string>;\r\n}\r\n","import { getManifest } from \"src/api/missionManifests\";\nimport React from \"react\";\n\nconst Main: React.FC = () => {\n  return <>{getManifest(\"Curiosity\")}</>;\n};\n\nexport default Main;\n"],"names":[],"sourceRoot":""}